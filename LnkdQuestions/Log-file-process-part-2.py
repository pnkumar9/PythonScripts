"""
# Below, see a sample of /var/log/messages.
---------- begin sample log extract ----------
Jan 20 03:25:08 fakehost logrotate: ALERT exited abnormally with [1]
Jan 20 03:25:08 fakehost run-parts(/etc/cron.daily)[20447]: finished logrotate
Jan 20 03:26:21 fakehost anacron[28969]: Job 'cron.daily' terminated
Jan 20 03:26:21 fakehost anacron[28969]: Normal exit (1 job run)
Jan 20 03:30:01 fakehost CROND[31462]: (root) CMD (/usr/lib64/sa/sa1 1 1)
Jan 20 03:30:01 fakehost CROND[31461]: (root) CMD (/var/system/bin/sys-cmd -F > /dev/null 2>&1)
Jan 20 05:03:03 fakehost ntpd[3705]: synchronized to time.faux.biz, stratum 2
Jan 20 05:20:01 fakehost rsyslogd: [origin software="rsyslogd" swVersion="5.8.10" x-pid="20438" x-info="http://www.rsyslog.com"] start
Jan 20 05:22:04 fakehost cs3[31163]:  Q: ".../bin/rsync -LD ": symlink has no referent: "/var/syscmds/fakehost/runit_scripts/etc/runit/service/superImportantService/run"#012Q: ".../bin/rsync -LD ": rsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1039) [sender=3.0.6]
Jan 20 05:22:04 fakehost cs3[31163]:  I: Last 2 quoted lines were generated by "/usr/local/bin/rsync -LD --recursive --delete --password-file=/var/syscmds/modules/rsync_password /var/syscmds/fakehost syscmds@fakehost::syscmds_rsync"
Jan 20 05:22:08 fakehost cs3[31163]:  Q: ".../sbin/sv restart": ok: run: /export/service/cool-service: (pid 32323) 0s
Jan 20 05:22:08 fakehost cs3[31163]:  I: Last 1 quoted lines were generated by "/sbin/sv restart /export/service/cool-service"
Jan 20 05:22:09 fakehost cs3[31163]:  R: cs3:  The cool service on fakehost does not appear to be communicating with the cool service leader.  Automating a restart of the cool service in attempt to resolve the communication problem.
Jan 20 05:22:37 fakehost ACCT_ADD: WARNING: Manifest /var/syscmds/inputs/config-general/doit.txt has been processed already, bailing

---------- end sample log extract ----------

# Extract the program name from the field between the hostname and the log message and output those values in columns.
# ---------- begin sample output ----------
# minute,total_count,logrotate,run-parts,anacron,CROND,ntpd,rsyslogd,cs3,ACCT_ADD
# Jan 20 03:25,2,1,1,0,0,0,0,0,0
# Jan 20 03:26,2,0,0,2,0,0,0,0,0
# Jan 20 03:30,2,0,0,0,2,0,0,0,0
# Jan 20 05:03,1,0,0,0,0,1,0,0,0
# Jan 20 05:20,1,0,0,0,0,0,1,0,0
# Jan 20 05:22,6,0,0,0,0,0,0,5,1
# ---------- end sample output ------------
# Note: It is important that your program work with any arbitrary set of programs, not just the ones in the example output.


"""

#!/usr/bin/python
from collections import defaultdict
import re

#output = defaultdict()
output = defaultdict(int)
#Parse out the timedate stamp Jan 20 05:22:37 to capture two groups 1.) Jan 20 05:22 2.) log output e.g.  
#R: cs3:  The cool service on fakehost does not appear to be communicating with the cool
regex = re.compile(r'^(\w+ \d+ \d+:\d+):\d+ \w+ (\w+).*$')
# 
with open("/Users/kumarp/Documents/Kumar-docs/PythonScripts/log-file.log", "r+") as myfile:
    for log_line in myfile: 
        match = regex.match(log_line)
        if match:
            if match.group(1) and match.group(2):
                #group(0) always returns entire line
                #print(match.group(0))
                #group(1) returns macthed regex
                #print(match.group(1))
                #group(2) - crond word
                #print(match.group(2))
                print(match.groups())

                try:
                    output[match.group(1)]['total_count'] += 1
                    output[match.group(1)][match.group(2)] += 1
                except KeyError: 
                    output[match.group(1)] = {'total_count':0}       
                
            else:
              print("Parsing line partically succeeded:" (log_line))
        else:
            print ("ERROR: Malformed logline %s" % (log_line))
output_file = open("/Users/kumarp/Documents/Kumar-docs/counts-type2", "w")
for (dt,count) in output.items():
    output_file.write("%s,%s\n" % (dt,count))